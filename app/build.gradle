apply plugin: 'com.android.application'

def static getBuildTime() {
    return new Date().format("yyyyMMdd.HH:mm:ss")
}

def getAppVersionName() {
    return "${versions.versionName}-${versions.versionCode}"
}

android {
    compileSdkVersion versions.compileSdkVersion

    defaultConfig {
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        applicationId apps.applicationId
        versionCode versions.versionCode
        versionName getAppVersionName()
        buildConfigField 'String', 'BUILD_TIME', '"' + getBuildTime() + '"'
    }

    // keystore文件
    signingConfigs {
        douban {
            storeFile file('../data/starry_douban.jks')
            storePassword 'starry123456'
            keyAlias 'douban'
            keyPassword 'douban123456'
        }
    }

    buildTypes {
        debug {
            versionNameSuffix '_debug'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue 'string', 'debug', 'true'
        }

        release {
            debuggable true
            minifyEnabled true
            signingConfig signingConfigs.douban
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue 'string', 'debug', 'false'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //android support
    compile deps.appcompat
    compile deps.support
    compile deps.recyclerview
    compile deps.design
    compile deps.cardview
    //others
    compile deps.okhttp3
    annotationProcessor deps.butterknifeCompiler
    compile deps.butterknife
    compile deps.glide
    compile deps.gson
    compile deps.rxjava
    compile deps.rxandroid
    //module
    compile project(':ProgressIndicator')
    compile project(':XRecyclerView')
    compile project(':SmartTabLayout')
}

//modify apk output  file name, format：db-versionName-versionCode-buildTime-buildType.apk
android.applicationVariants.all { variant ->
    variant.outputs.all {
        def apkName = "db-${versions.versionName}-${versions.versionCode}-${getBuildTime()}"
        outputFileName = "${apkName}-${buildType.name}.apk"
    }
}